@using CourseProject.Models.DataModels
@using Microsoft.AspNetCore.Identity
@using CourseProject.Data
@model CourseProject.Models.ViewModels.OrderConfirmViewModel
@inject UserManager<User> UserManager

<div style="display: flex; gap: 10px; margin: 20px auto">
    @foreach (var status in Model.StatusList)
    {
        <a class="btn btn-outline-warning"
           asp-controller="Order" asp-action="ConfirmIndex" asp-route-id="@status.Id">
            @status.Name
        </a>
    }
</div>

<style>
    .hidden {
        visibility: hidden;
    }
    .visible {
        visibility: visible;
    }
</style>
<div class="form-popup" style="display: none; position: fixed; bottom: 0; right: 15px; border: 3px solid #f1f1f1; z-index: 9;" id="msgForm">
    <form class="form-container">

        <label>
            <b>Message</b>
            <input type="text" placeholder="Enter Message" name="msg" required>
        </label>
        

        <button type="submit" class="btn" onclick="saveForm()">Save</button>
        <button type="submit" class="btn cancel" onclick="closeForm()">Close</button>
    </form>
</div>

@if (!Model.Orders.Any())
{
    <p class="text-center">Дані відсутні</p>
}
<table class="table details 
        @(!Model.Orders.Any() ? "hidden" : "visible") 
        @(Model.Orders.Any() && Model.Orders[0].Status.Name == OrderStatusConst.InProgress ? "success" : "table-dark")
         table-striped table-hover">
    <thead>
    <tr>
        <th scope="col">#</th>
        <th scope="col">Username</th>
        <th scope="col">Amount</th>
        <th scope="col">Manage</th>
    </tr>
    </thead>

    <tbody>
    @for (var i = 0; i < Model.Orders.Count; i++)
    {
        <tr>
            <th scope="row">@(i + 1)</th>
            <td>@(Model.Orders[i].User.Name)</td>
            <td>@Model.Orders[i].Products.Sum(p => p.Quantity * p.Price)</td>

            <td>
                @if (Model.Orders[i].Status.Name == OrderStatusConst.InProgress)
                {
                    <a class="btn btn-outline-warning"
                       asp-controller="Order" asp-action="Confirm" asp-route-id="@Model.Orders[i].Id">
                        Confirm
                    </a>
                    <a class="btn btn-outline-danger"
                       asp-controller="Order" asp-action="Reject" asp-route-id="@Model.Orders[i].Id">
                        Reject
                    </a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<script>
    function openForm() {
        document.getElementById("msgForm").style.display = "block";
    }

    function saveForm() {
        const text = document.getElementsByName("msg").values()[0];

        let msg = getCookie("msg");

        if (msg === undefined) {
          msg = [{ text: text, userId: "@UserManager.GetUserId(User)" }];
        } else {
          msg.add({ text: text, userId: "@UserManager.GetUserId(User)" });
        }
        
        setCookie("msg", msg, 10);

        closeForm();
    }

    function closeForm() {
        document.getElementById("msgForm").style.display = "none";
    }

    function setCookie(name,value,days) {
        let expires = '';
        
        if (days) {
            const date = new Date();

            date.setTime(date.getTime() + (days*24*60*60*1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "")  + expires + "; path=/";
    }

    function getCookie(name) {
        let matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([.$?*|{}()\[\]\\\/+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }
</script>